var searchIndex = JSON.parse('{\
"gst_meet":{"doc":"","t":"HHHHHHHHHHHHHHHHHHHHHHHHDLLMLLLLMLLFLMFFMMMMMMMMMMMMMLLLLMMMLMMMMM","n":["CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","META","META","META","META","META","META","META","META","META","META","META","META","Opt","borrow","borrow_mut","buffer_size","clap","clone","clone_into","fmt","focus_jid","from","from_clap","init_gstreamer","into","last_n","main","main_inner","muc_domain","nick","recv_pipeline","recv_pipeline_participant_template","recv_video_scale_height","recv_video_scale_width","region","room_name","select_endpoints","send_pipeline","send_video_height","start_bitrate","stereo","to_owned","try_from","try_into","type_id","verbose","video_codec","video_type","vzip","web_socket_url","xmpp_domain","xmpp_jwt","xmpp_password","xmpp_username"],"q":[[0,"gst_meet"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,0,2,2,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,[[],1],[2,2],[[]],[[2,3],4],0,[[]],[5,2],[[],6],[[]],0,[[],6],[[],6],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[],7],[[],7],[[],8],0,0,0,[[]],0,0,0,0,0],"c":[],"p":[[3,"App"],[3,"Opt"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[6,"Result"],[4,"Result"],[3,"TypeId"]]},\
"gstmeet":{"doc":"","t":"NNEDDDDNEDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLFFFFFFFFFFFFFFLFLLLLLLLLMLLMMLMMLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMMM","n":["Anonymous","Audio","Authentication","ConferenceConfig","Connection","Context","JitsiConference","Jwt","MediaType","Participant","Plain","Video","add_bin","add_stanza_filter","audio_sink_element","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","connect","eq","external_services","filter","fmt","fmt","fmt","fmt","focus","from","from","from","from","from","from","from","gstmeet_conference_audio_sink_element","gstmeet_conference_leave","gstmeet_conference_on_participant","gstmeet_conference_pipeline","gstmeet_conference_set_muted","gstmeet_conference_set_pipeline_state","gstmeet_conference_video_sink_element","gstmeet_connection_connect","gstmeet_connection_free","gstmeet_connection_join_conference","gstmeet_connection_new","gstmeet_deinit","gstmeet_init","gstmeet_init_tracing","hash","init_tracing","into","into","into","into","into","into","into","jid","jid","join","leave","muc","muc_jid","new","nick","nick","on_colibri_message","on_participant","on_participant_left","pipeline","region","remote_participant_audio_sink_element","remote_participant_video_sink_element","send_colibri_message","send_json_message","set_muted","set_pipeline_state","set_remote_participant_audio_sink_element","set_remote_participant_video_sink_element","set_send_resolution","take","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","video_codec","video_sink_element","vzip","vzip","vzip","vzip","vzip","vzip","vzip","password","token","username"],"q":[[0,"gstmeet"],[134,"gstmeet::Authentication"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Set the max resolution that we are currently sending.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[9,8,0,0,0,0,0,9,0,0,9,8,1,4,1,15,21,39,1,8,4,9,15,21,39,1,8,4,9,1,8,4,9,1,8,4,9,4,8,4,1,1,8,4,9,21,15,21,39,1,8,4,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,15,21,39,1,8,4,9,4,39,1,1,21,39,4,21,39,1,1,1,1,21,1,1,1,1,1,1,1,1,1,1,1,8,4,9,15,21,39,1,8,4,9,15,21,39,1,8,4,9,15,21,39,1,8,4,9,21,1,15,21,39,1,8,4,9,40,41,40],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],3],[[4,[0,[5,6,7]]],3],[1,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[8,8],[4,4],[9,9],[[]],[[]],[[]],[[]],[4,3],[[8,8],10],[4,3],[[1,11],10],[[1,12],[[14,[13]]]],[[8,12],[[14,[13]]]],[[4,12],[[14,[13]]]],[[9,12],[[14,[13]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[15,1],16],[[15,1],10],[[15,1,17]],[[15,1],18],[[15,1,8,10],10],[[15,1,19],10],[[15,1],16],[[15,4],10],[4],[[15,4,20,21],1],[[15,22,22,10],4],[15],[[],15],[22],[[8,23]],[24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4,3],0,[[4,25,26],3],[1,3],0,0,[[27,27,9,27,10],3],0,0,[[1,[0,[28,6,7]]],3],[[1,[0,[28,6,7]]],3],[[1,[0,[28,6,7]]],3],[1,3],0,[1,3],[1,3],[[1,29],3],[[1,30],3],[[1,8,10],3],[[1,31],3],[[1,[33,[32]]],3],[[1,[33,[32]]],3],[[1,34],3],[[1,11],[[37,[[36,[3,35]]]]]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],0,[1,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0],"c":[],"p":[[3,"JitsiConference"],[3,"Bin"],[8,"Future"],[3,"Connection"],[8,"StanzaFilter"],[8,"Send"],[8,"Sync"],[4,"MediaType"],[4,"Authentication"],[15,"bool"],[3,"Element"],[3,"Formatter"],[3,"Error"],[4,"Result"],[3,"Context"],[3,"GstElement"],[4,"c_void"],[3,"GstPipeline"],[6,"GstState"],[3,"GMainContext"],[3,"ConferenceConfig"],[6,"c_char"],[8,"Hasher"],[3,"Level"],[3,"MainContext"],[3,"JitsiConferenceConfig"],[15,"str"],[8,"Fn"],[4,"ColibriMessage"],[8,"Serialize"],[4,"State"],[3,"Element"],[4,"Option"],[15,"i32"],[3,"Global"],[3,"Box"],[3,"Pin"],[3,"TypeId"],[3,"Participant"],[13,"Plain"],[13,"Jwt"]]},\
"jitsi_xmpp_parsers":{"doc":"","t":"AAAAAAEDNNNNNENNNDNNNNNNNNNENNNNNNMLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLMMLLLLLLMLLMMMMMLLMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLMLMLLLLLMDDLLLLLMLLLLLLLMLLLLLLLMLLLLLLLLLLMMMLDLLLLLLLMLMLMMMMMLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLMLMMMMLLLLLLLLLLLLLLLLLLLLMRR","n":["jingle","jingle_dtls_srtp","jingle_ice_udp","jingle_rtp","jingle_ssma","ns","Action","Content","ContentAccept","ContentAdd","ContentModify","ContentReject","ContentRemove","Description","DescriptionInfo","Ibb","IceUdp","Jingle","Rtp","SecurityInfo","SessionAccept","SessionInfo","SessionInitiate","SessionTerminate","Socks5","SourceAdd","SourceRemove","Transport","TransportAccept","TransportInfo","TransportReject","TransportReplace","Unknown","Unknown","action","add_content","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","contents","creator","description","disposition","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_str","group","initiator","into","into","into","into","into","into_attribute_value","name","new","new","other","reason","responder","security","senders","set_group","set_reason","sid","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transport","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","with_description","with_disposition","with_initiator","with_responder","with_security","with_senders","with_transport","Fingerprint","borrow","borrow_mut","clone","clone_into","eq","fmt","from","from_colon_separated_hex","from_hash","hash","into","setup","to_owned","try_from","try_from","try_into","type_id","value","Transport","WebSocket","add_candidate","borrow","borrow","borrow_mut","borrow_mut","candidates","clone","clone","clone_into","clone_into","default","eq","eq","fingerprint","fmt","fmt","from","from","into","into","new","pwd","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","ufrag","url","web_socket","with_fingerprint","Description","borrow","borrow_mut","clone","clone_into","eq","fmt","from","hdrexts","into","media","new","payload_types","rtcp_mux","ssrc","ssrc_groups","ssrcs","to_owned","try_from","try_from","try_into","type_id","Group","Parameter","Source","SsrcInfo","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","id","info","into","into","into","into","name","new","owner","parameters","semantics","sources","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","value","JITSI_COLIBRI","JITSI_MEET"],"q":[[0,"jitsi_xmpp_parsers"],[6,"jitsi_xmpp_parsers::jingle"],[133,"jitsi_xmpp_parsers::jingle_dtls_srtp"],[152,"jitsi_xmpp_parsers::jingle_ice_udp"],[190,"jitsi_xmpp_parsers::jingle_rtp"],[212,"jitsi_xmpp_parsers::jingle_ssma"],[277,"jitsi_xmpp_parsers::ns"]],"d":["","","","","","","The action attribute.","Describes a session’s content, there can be multiple …","Accept a content-add action received from another party.","Add one or more new content definitions to the session.","Change the directionality of media sending.","Reject a content-add action received from another party.","Remove one or more content definitions from the session.","Enum wrapping all of the various supported descriptions of …","Exchange information about parameters for an application …","Jingle In-Band Bytestreams (XEP-0261) transport.","Jingle ICE-UDP Bytestreams (XEP-0176) transport.","The main Jingle container, to be included in an iq stanza.","Jingle RTP Sessions (XEP-0167) description.","Exchange information about security preconditions.","Definitively accept a session negotiation.","Send session-level information, such as a ping or a …","Request negotiation of a new Jingle session.","End an existing session.","Jingle SOCKS5 Bytestreams (XEP-0260) transport.","— Non-standard values used by Jitsi Meet: — Add a …","Remove a source from existing content.","Enum wrapping all of the various supported transports of a …","Accept a transport-replace action received from another …","Exchange transport candidates.","Reject a transport-replace action received from another …","Redefine a transport method or replace it with a different …","To be used for any description that isn’t known at …","To be used for any transport that isn’t known at …","The action to execute on both ends.","Add a content to this Jingle container.","","","","","","","","","","","","","","","","","","","","","A list of contents to be negotiated in this session.","Who created this content.","What to send.","How the content definition is to be interpreted by the …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","An optional grouping.","Who the initiator is.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","A per-session unique identifier for this content.","Create a new Jingle element.","Create a new content.","Payloads to be included.","An optional reason.","Who the responder is.","With which security.","Who can send data for this content.","Set the grouping in this Jingle container.","Set the reason in this Jingle container.","Unique session identifier between two entities.","","","","","","","How to send it.","","","","","","","","","","","","","","","","","","","","Set the description of this content.","Set how the content is to be interpreted by the recipient.","Set the initiator’s JID.","Set the responder’s JID.","Set the security of this content.","Specify who can send data for this content.","Set the transport of this content.","Fingerprint of the key used for a DTLS handshake.","","","","","","","Returns the argument unchanged.","Create a new Fingerprint from a Setup and parsing the hash.","Create a new Fingerprint from a Setup and a Hash.","The hash algorithm used for this fingerprint.","Calls <code>U::from(self)</code>.","Indicates which of the end points should initiate the TCP …","","","","","","Hash value of this fingerprint.","Wrapper element for an ICE-UDP transport.","Colibri WebSocket details","Add a candidate to this transport.","","","","","List of candidates for this ICE-UDP session.","","","","","","","","Fingerprint of the key used for the DTLS handshake.","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new ICE-UDP transport.","A Password as defined in ICE-CORE.","","","","","","","","","","","A User Fragment as defined in ICE-CORE.","The WebSocket URL","Details of the Colibri WebSocket","Set the DTLS-SRTP fingerprint of this transport.","Wrapper element describing an RTP session.","","","","","","","Returns the argument unchanged.","List of header extensions.","Calls <code>U::from(self)</code>.","Namespace of the encryption scheme used.","Create a new RTP description.","List of encodings that can be used for this RTP stream.","Specifies the ability to multiplex RTP Data and Control …","User-friendly name for the encryption scheme, should be …","List of ssrc-group.","List of ssrc.","","","","","","Element grouping multiple ssrc.","Parameter associated with a ssrc.","Source element for the ssrc SDP attribute.","ssrc-info associated with a ssrc.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Maps to the ssrc-id parameter.","— Non-standard attributes used by Jitsi Meet: — …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create a new SSMA Source element.","The owner of the ssrc.","List of attributes for this source.","The semantics of this group.","The various ssrc concerned by this group.","","","","","","","","","","","","","","","","","","","","","","Jitsi Meet Colibri namespace","Jitsi Meet general namespace"],"i":[0,0,0,0,0,0,0,0,3,3,3,3,3,0,3,5,5,0,4,3,3,3,3,3,5,3,3,0,3,3,3,3,4,5,1,1,3,1,4,5,2,3,1,4,5,2,3,1,4,5,2,3,1,4,5,2,1,2,2,2,3,1,4,5,2,3,3,1,4,5,2,3,1,4,4,5,5,5,5,2,3,1,1,3,1,4,5,2,3,2,1,2,1,1,1,2,2,1,1,1,3,1,4,5,2,3,2,3,1,1,4,4,5,5,2,2,3,1,4,5,2,3,1,4,5,2,2,2,1,1,2,2,2,0,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,0,0,12,12,34,12,34,12,12,34,12,34,12,12,34,12,12,34,12,34,12,34,12,12,12,34,12,12,34,34,12,34,12,34,12,34,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,35,36,37,38,35,36,37,38,35,36,37,38,35,36,37,38,35,36,37,38,35,36,37,38,35,36,37,38,35,35,35,36,37,38,36,35,37,35,38,38,35,36,37,38,35,35,36,36,37,37,38,38,35,36,37,38,35,36,37,38,36,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,3],[1,1],[4,4],[5,5],[2,2],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[3,3],6],[[1,1],6],[[4,4],6],[[5,5],6],[[2,2],6],[[3,7],[[9,[8]]]],[[3,7],10],[[1,7],10],[[4,7],10],[[5,7],10],[[2,7],10],[[]],[[]],[11,4],[[]],[12,5],[[]],[13,5],[14,5],[[]],[15,[[9,[3,16]]]],0,0,[[]],[[]],[[]],[[]],[[]],[3,[[18,[17]]]],0,[[3,19],1],[[20,21],2],0,0,0,0,0,[[1,22],1],[[1,23],1],0,[[]],[[]],[[]],[[]],[[]],[[],17],0,[[],9],[24,[[9,[1,16]]]],[[],9],[24,[[9,[4,16]]]],[[],9],[24,[[9,[5,16]]]],[[],9],[24,[[9,[2,16]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],25],[[],25],[[],25],[[],25],[[],25],[[2,[26,[4]]],2],[[2,27],2],[[1,28],1],[[1,28],1],[[2,24],2],[[2,29],2],[[2,[26,[5]]],2],0,[[]],[[]],[30,30],[[]],[[30,30],6],[[30,7],10],[[]],[[31,15,15],[[9,[30,16]]]],[[31,32],30],0,[[]],0,[[]],[24,[[9,[30,16]]]],[[],9],[[],9],[[],25],0,0,0,[[12,33],12],[[]],[[]],[[]],[[]],0,[12,12],[34,34],[[]],[[]],[[],12],[[12,12],6],[[34,34],6],0,[[12,7],10],[[34,7],10],[[]],[[]],[[]],[[]],[[],12],0,[[]],[[]],[[],9],[24,[[9,[12,16]]]],[[],9],[24,[[9,[34,16]]]],[[],9],[[],9],[[],25],[[],25],0,0,0,[[12,30],12],0,[[]],[[]],[11,11],[[]],[[11,11],6],[[11,7],10],[[]],0,[[]],0,[17,11],0,0,0,0,0,[[]],[24,[[9,[11,16]]]],[[],9],[[],9],[[],25],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[35,35],[36,36],[37,37],[38,38],[[]],[[]],[[]],[[]],[[35,35],6],[[36,36],6],[[37,37],6],[[38,38],6],[[35,7],10],[[36,7],10],[[37,7],10],[[38,7],10],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],0,[39,35],0,0,0,0,[[]],[[]],[[]],[[]],[24,[[9,[35,16]]]],[[],9],[[],9],[24,[[9,[36,16]]]],[[],9],[24,[[9,[37,16]]]],[24,[[9,[38,16]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],25],[[],25],[[],25],[[],25],0,0,0],"c":[],"p":[[3,"Jingle"],[3,"Content"],[4,"Action"],[4,"Description"],[4,"Transport"],[15,"bool"],[3,"Formatter"],[3,"Error"],[4,"Result"],[6,"Result"],[3,"Description"],[3,"Transport"],[3,"Transport"],[3,"Transport"],[15,"str"],[4,"Error"],[3,"String"],[4,"Option"],[3,"SessionId"],[4,"Creator"],[3,"ContentId"],[3,"Group"],[3,"ReasonElement"],[3,"Element"],[3,"TypeId"],[8,"Into"],[4,"Disposition"],[4,"Jid"],[4,"Senders"],[3,"Fingerprint"],[4,"Setup"],[3,"Hash"],[3,"Candidate"],[3,"WebSocket"],[3,"Source"],[3,"Parameter"],[3,"SsrcInfo"],[3,"Group"],[15,"u32"]]},\
"lib_gst_meet":{"doc":"","t":"NNEDDDDNEDNINLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLALLLLMKLLLLLLLLMLLLLLLLLLFLLLLLLLLMLLMMLLMMLLLLMMMLLLLLLLLLMMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLCMMM","n":["Anonymous","Audio","Authentication","Connection","Feature","JitsiConference","JitsiConferenceConfig","Jwt","MediaType","Participant","Plain","StanzaFilter","Video","add_bin","add_stanza_filter","audio_sink_element","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer_size","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","colibri","connect","eq","eq","external_services","extra_muc_features","filter","filter","fmt","fmt","fmt","fmt","fmt","fmt","fmt","focus","from","from","from","from","from","from","from","hash","hash","init_tracing","into","into","into","into","into","into","into","jid","jid","join","leave","muc","muc_jid","new","new","nick","nick","on_colibri_message","on_participant","on_participant_left","pipeline","recv_video_scale_height","recv_video_scale_width","region","remote_participant_audio_sink_element","remote_participant_video_sink_element","send_colibri_message","send_json_message","set_muted","set_pipeline_state","set_remote_participant_audio_sink_element","set_remote_participant_video_sink_element","set_send_resolution","start_bitrate","stereo","take","take","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","var","video_codec","video_sink_element","vzip","vzip","vzip","vzip","vzip","vzip","vzip","xmpp_parsers","password","token","username"],"q":[[0,"lib_gst_meet"],[148,"lib_gst_meet::Authentication"]],"d":["","","","","Structure representing a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Create a new <code>&lt;feature/&gt;</code> with the according <code>@var</code>.","","","","","","","","","","","","","","","","","","Set the max resolution that we are currently sending.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Namespace of the feature we want to represent.","","","","","","","","","","","","",""],"i":[12,11,0,0,0,0,0,12,0,0,12,0,11,1,4,1,9,1,10,11,4,12,13,9,1,10,11,4,12,13,9,9,1,10,11,4,12,13,9,1,10,11,4,12,13,0,4,11,13,4,9,5,1,9,1,10,11,4,12,13,9,9,1,10,11,4,12,13,11,13,0,9,1,10,11,4,12,13,4,10,1,1,9,10,4,13,9,10,1,1,1,1,9,9,9,1,1,1,1,1,1,1,1,1,9,9,5,1,9,1,10,11,4,12,13,9,1,10,11,4,12,13,13,9,1,10,11,4,12,13,9,1,10,11,4,12,13,13,9,1,9,1,10,11,4,12,13,0,40,41,40],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],3],[[4,[0,[5,6,7]]]],[1,[[3,[8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[9,9],[1,1],[10,10],[11,11],[4,4],[12,12],[13,13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[4,3],[[11,11],14],[[13,13],14],[4,[[15,[0]]]],0,[16,14],[[1,16],14],[[9,17],18],[[1,17],18],[[10,17],18],[[11,17],18],[[4,17],18],[[12,17],18],[[13,17],[[20,[19]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[11,21]],[[13,21]],[22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4,[[24,[23]]]],0,[[4,25,9],[[3,[1]]]],[1,3],0,0,[[26,26,12,26,14],3],[[[28,[27]]],13],0,0,[[1,[0,[29,6,7]]]],[[1,[0,[29,6,7]]]],[[1,[0,[29,6,7]]]],[1,[[3,[30]]]],0,0,0,[1,[[24,[8]]]],[1,[[24,[8]]]],[[1,31],3],[[1,32],3],[[1,11,14],3],[[1,33],3],[[1,[24,[8]]]],[[1,[24,[8]]]],[[1,34]],0,0,[16,[[37,[[36,[35]]]]]],[[1,16],[[37,[[36,[35]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[16,[[20,[13,38]]]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],0,0,[1,[[3,[8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0],"c":[],"p":[[3,"JitsiConference"],[3,"Bin"],[6,"Result"],[3,"Connection"],[8,"StanzaFilter"],[8,"Send"],[8,"Sync"],[3,"Element"],[3,"JitsiConferenceConfig"],[3,"Participant"],[4,"MediaType"],[4,"Authentication"],[3,"Feature"],[15,"bool"],[3,"Vec"],[3,"Element"],[3,"Formatter"],[6,"Result"],[3,"Error"],[4,"Result"],[8,"Hasher"],[3,"Level"],[3,"FullJid"],[4,"Option"],[3,"MainContext"],[15,"str"],[3,"String"],[8,"Into"],[8,"Fn"],[3,"Pipeline"],[4,"ColibriMessage"],[8,"Serialize"],[4,"State"],[15,"i32"],[8,"Future"],[3,"Box"],[3,"Pin"],[4,"Error"],[3,"TypeId"],[13,"Plain"],[13,"Jwt"]]},\
"nice_gst_meet":{"doc":"","t":"DDSDEEEENNNNNNNSSNNNNNSSNENNSNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Agent","AgentOption","CONSENT_FRESHNESS","Candidate","CandidateTransport","CandidateType","Compatibility","ComponentState","Connected","Connecting","Disconnected","Failed","Gathering","Google","Host","ICE_TRICKLE","LITE_MODE","Last","Msn","Oc2007","Oc2007r2","PeerReflexive","REGULAR_NOMINATION","RELIABLE","Ready","RelayType","Relayed","Rfc5245","SUPPORT_RENOMINATION","ServerReflexive","Tcp","TcpActive","TcpPassive","TcpSo","Tls","Udp","Udp","Wlm2009","add_stream","add_weak_ref_notify","add_weak_ref_notify_local","addr","all","as_ptr","attach_recv","bind_property","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","block_signal","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","class","class_of","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","compatibility","complement","component_id","component_state","connect","connect_bytestream_tcp_notify","connect_candidate_gathering_done","connect_closure","connect_closure_id","connect_component_state_changed","connect_controlling_mode_notify","connect_force_relay_notify","connect_ice_tcp_notify","connect_ice_trickle_notify","connect_ice_udp_notify","connect_id","connect_idle_timeout_notify","connect_initial_binding_request_received","connect_keepalive_conncheck_notify","connect_local","connect_local_id","connect_max_connectivity_checks_notify","connect_new_candidate","connect_new_candidate_full","connect_new_remote_candidate","connect_new_remote_candidate_full","connect_new_selected_pair","connect_new_selected_pair_full","connect_notify","connect_notify_local","connect_notify_unsafe","connect_proxy_ip_notify","connect_proxy_password_notify","connect_proxy_port_notify","connect_proxy_type_notify","connect_proxy_username_notify","connect_reliable_transport_writable","connect_stun_initial_timeout_notify","connect_stun_max_retransmissions_notify","connect_stun_pacing_timer_notify","connect_stun_reliable_timeout_notify","connect_stun_server_notify","connect_stun_server_port_notify","connect_support_renomination_notify","connect_unsafe","connect_unsafe_id","connect_upnp_notify","connect_upnp_timeout_notify","contains","data","debug_disable","debug_enable","default_local_candidate","difference","disconnect","downgrade","emit","emit_by_name","emit_by_name_with_details","emit_by_name_with_details_and_values","emit_by_name_with_values","emit_with_details","emit_with_details_and_values","emit_with_values","empty","ensure_type","ensure_type","eq","eq","eq","eq","eq","eq","eq","equal_target","extend","find_property","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forget_relays","foundation","freeze_notify","from","from","from","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_ptr_borrow","from_glib_ptr_borrow_mut","from_iter","from_name","gather_candidates","generate_local_candidate_sdp","generate_local_sdp","generate_local_stream_sdp","get","get","get_selected_pair","has_property","hash","hash","hash","hash","hash","hash","hash","idle_timeout","insert","interface","intersection","intersects","into","into","into","into","into","into","into","into","into_closure_return_value","into_closure_return_value","into_iter","is","is_all","is_bytestream_tcp","is_controlling_mode","is_empty","is_force_relay","is_full_mode","is_ice_tcp","is_ice_trickle","is_ice_udp","is_keepalive_conncheck","is_reliable","is_upnp","iter","iter_names","list_properties","local_candidates","local_credentials","max_connectivity_checks","new","new","new_full","new_reliable","not","notify","notify_by_pspec","object_class","param_spec_builder","param_spec_builder","parent_class_init","parent_instance_init","parse_remote_candidate_sdp","parse_remote_sdp","parse_remote_stream_sdp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","password","peer_candidate_gathering_done","priority","property","property_type","property_value","proxy_ip","proxy_password","proxy_port","proxy_type","proxy_username","qdata","ref_count","remote_candidates","remove","remove_stream","restart","restart_stream","run_dispose","send","set","set_addr","set_component_id","set_controlling_mode","set_data","set_force_relay","set_foundation","set_ice_tcp","set_ice_trickle","set_ice_udp","set_idle_timeout","set_keepalive_conncheck","set_local_credentials","set_max_connectivity_checks","set_password","set_port_range","set_priority","set_properties","set_properties_from_value","set_property","set_property_from_value","set_proxy_ip","set_proxy_password","set_proxy_port","set_proxy_type","set_proxy_username","set_qdata","set_relay_info","set_remote_candidates","set_remote_credentials","set_selected_pair","set_selected_remote_candidate","set_software","set_stream_id","set_stream_name","set_stream_tos","set_stun_initial_timeout","set_stun_max_retransmissions","set_stun_pacing_timer","set_stun_reliable_timeout","set_stun_server","set_stun_server_port","set_support_renomination","set_transport","set_upnp","set_upnp_timeout","set_username","static_type","static_type","steal_data","steal_qdata","stop_signal_emission","stop_signal_emission_by_name","stream_id","stream_name","stun_initial_timeout","stun_max_retransmissions","stun_pacing_timer","stun_reliable_timeout","stun_server","stun_server_port","sub","sub_assign","supports_renomination","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_send_value","to_send_value","to_string","to_string","to_string","to_string","to_string","to_string","to_string","toggle","transport","transport_to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_closure_return_value","try_from_closure_return_value","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_to_string","unblock_signal","union","upnp_timeout","username","watch_closure"],"q":[[0,"nice_gst_meet"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the set containing all flags.","Return the inner pointer to the underlying C value.","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, preserving all …","","Convert from underlying bit representation, dropping any …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Borrows the underlying C value.","Borrows the underlying C value mutably.","","Get the value for a flag from its stringified name.","","","","","","","","","","","","","","","","","Inserts the specified flags in-place.","","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Returns <code>true</code> if all flags are currently set.","","","Returns <code>true</code> if no flags are currently stored.","","","","","","","","","Iterate over enabled flag values.","Iterate over enabled flag values with their stringified …","","","","","","","","","Returns the complement of this set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Removes the specified flags in-place.","","","","","","Inserts or removes the specified flags depending on the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","",""],"i":[0,0,8,0,0,0,0,0,23,23,23,23,23,22,21,8,8,23,22,22,22,21,8,8,23,0,21,22,8,21,24,20,20,20,24,20,24,22,1,1,1,6,8,6,1,1,8,8,8,8,8,8,8,8,1,1,6,20,21,22,23,24,8,1,6,20,21,22,23,24,8,1,1,1,6,20,21,22,23,24,1,6,20,21,22,23,24,1,6,20,21,22,23,24,1,8,6,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,8,1,0,0,1,8,1,1,1,1,1,1,1,1,1,1,8,1,6,1,6,20,21,22,23,24,6,8,1,1,1,6,20,20,21,21,22,22,23,23,24,24,8,8,8,8,8,8,1,6,1,1,6,20,21,22,23,24,8,8,8,8,8,1,1,1,1,1,1,6,6,6,6,6,6,1,1,1,1,1,1,6,6,6,6,6,6,1,1,1,1,1,1,6,6,6,6,6,6,1,1,1,1,1,1,6,6,6,6,6,6,1,1,1,1,1,1,6,6,6,6,6,6,1,1,1,1,1,1,6,6,6,6,6,6,6,6,8,8,1,1,1,1,1,6,1,1,1,6,20,21,22,23,24,1,8,1,8,8,1,6,20,21,22,23,24,8,1,6,8,1,8,1,1,8,1,1,1,1,1,1,1,1,8,8,1,1,1,1,1,6,1,1,8,1,1,1,1,6,1,1,1,1,1,1,6,20,21,22,23,24,6,1,6,1,1,1,1,1,1,1,1,1,1,1,8,1,1,1,1,1,8,6,6,1,1,1,6,1,1,1,1,1,1,1,6,1,6,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,6,1,1,1,1,1,1,1,1,1,6,1,1,6,1,6,1,1,1,1,6,1,1,1,1,1,1,1,8,8,1,8,1,6,20,21,22,23,24,1,6,1,20,21,22,23,24,8,8,6,6,1,6,20,21,22,23,24,8,1,6,1,6,20,21,22,23,24,8,1,6,1,6,20,21,22,23,24,8,6,1,8,1,6,1],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],2],[[[0,[3,4]]],5],[3,5],[6,7],[[],8],[6,9],[[1,2,2,10,11],12],[[13,14,13],15],[[8,8],8],[[8,8]],[[8,8],8],[[8,8]],[8,2],[8,2],[[8,8],8],[[8,8]],[16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[18,[17]]]],[[],[[19,[[18,[17]]]]]],[1,1],[6,6],[20,20],[21,21],[22,22],[23,23],[24,24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,1],25],[[6,6],25],[[20,20],25],[[21,21],25],[[22,22],25],[[23,23],25],[[24,24],25],[1,2],[8,8],[6,2],[[1,2,2],23],[[13,12,[0,[26,4,27]]],16],[[1,26],16],[[1,26],16],[[13,12,28],16],[[29,[19,[30]],12,28],16],[[1,26],16],[[1,26],16],[[1,26],16],[[1,26],16],[[1,26],16],[[1,26],16],[[29,[19,[30]],12,[0,[26,4,27]]],16],[[1,26],16],[[1,26],16],[[1,26],16],[[13,12,26],16],[[29,[19,[30]],12,26],16],[[1,26],16],[[1,26],16],[[1,26],16],[[1,26],16],[[1,26],16],[[1,26],16],[[1,26],16],[[[19,[13]],[0,[26,4,27]]],16],[[[19,[13]],26],16],[[[19,[13]],26],16],[[1,26],16],[[1,26],16],[[1,26],16],[[1,26],16],[[1,26],16],[[1,26],16],[[1,26],16],[[1,26],16],[[1,26],16],[[1,26],16],[[1,26],16],[[1,26],16],[[1,26],16],[[13,12,26],16],[[29,[19,[30]],12,26],16],[[1,26],16],[[1,26],16],[[8,8],12],[13,[[19,[31]]]],[12],[12],[[1,2,2],[[19,[6]]]],[[8,8],8],[16],[[],32],[29,33],[13,33],[[13,30],33],[[13,30],[[19,[34]]]],[13,[[19,[34]]]],[[29,30],33],[[29,30],[[19,[34]]]],[29,[[19,[34]]]],[[],8],[[]],[[]],[[1,14],12],[[6,6],12],[[20,20],12],[[21,21],12],[[22,22],12],[[23,23],12],[[24,24],12],[[6,6],12],[[8,35]],[13,[[19,[36]]]],[[1,37],38],[[1,37],38],[[6,37],38],[[20,37],38],[[20,37],38],[[21,37],38],[[21,37],38],[[22,37],38],[[22,37],38],[[23,37],38],[[23,37],38],[[24,37],38],[[24,37],38],[[8,37],38],[[8,37],38],[[8,37],38],[[8,37],38],[[8,37],38],[[8,37],38],[[1,2,2],12],[6,[[40,[13,39]]]],[[],41],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,[[19,[8]]]],[2,8],[2,8],[2,8],[42,[[44,[43]]]],[45,[[44,[43]]]],[42,[[44,[43]]]],[45,[[44,[43]]]],[46,[[44,[43]]]],[46,[[44,[43]]]],[42,[[44,[43]]]],[46,[[44,[43]]]],[42,[[44,[43]]]],[45,[[44,[43]]]],[46,[[44,[43]]]],[45,[[44,[43]]]],[[42,47],[[44,[43]]]],[[45,47],[[44,[43]]]],[[45,47],[[44,[43]]]],[[42,47],[[44,[43]]]],[[46,47],[[44,[43]]]],[[46,47],[[44,[43]]]],[[46,47],[[44,[43]]]],[[42,47],[[44,[43]]]],[[45,47],[[44,[43]]]],[[46,47],[[44,[43]]]],[[45,47],[[44,[43]]]],[[42,47],[[44,[43]]]],[42,[[44,[43]]]],[45,[[44,[43]]]],[46,[[44,[43]]]],[42,[[44,[43]]]],[45,[[44,[43]]]],[46,[[44,[43]]]],[46,[[44,[43]]]],[42,[[44,[43]]]],[45,[[44,[43]]]],[42,[[44,[43]]]],[46,[[44,[43]]]],[45,[[44,[43]]]],[[42,47],[[44,[43]]]],[[42,47],[[44,[43]]]],[[46,47],[[44,[43]]]],[[45,47],[[44,[43]]]],[[45,47],[[44,[43]]]],[[46,47],[[44,[43]]]],[[46,47],[[44,[43]]]],[[42,47],[[44,[43]]]],[[42,47],[[44,[43]]]],[[45,47],[[44,[43]]]],[[45,47],[[44,[43]]]],[[46,47],[[44,[43]]]],[45,[[44,[43]]]],[42,[[44,[43]]]],[45,[[44,[43]]]],[42,[[44,[43]]]],[46,[[44,[43]]]],[46,[[44,[43]]]],[45,[[44,[43]]]],[46,[[44,[43]]]],[46,[[44,[43]]]],[42,[[44,[43]]]],[45,[[44,[43]]]],[42,[[44,[43]]]],[[46,47],[[44,[43]]]],[[42,47],[[44,[43]]]],[[45,47],[[44,[43]]]],[[45,47],[[44,[43]]]],[[46,47],[[44,[43]]]],[[42,47],[[44,[43]]]],[[42,47],[[44,[43]]]],[[46,47],[[44,[43]]]],[[42,47],[[44,[43]]]],[[45,47],[[44,[43]]]],[[46,47],[[44,[43]]]],[[45,47],[[44,[43]]]],[9,6],[9,6],[35,8],[13,[[19,[8]]]],[[1,2],12],[[1,6],[[19,[48]]]],[1,[[19,[49]]]],[[1,2,12],[[19,[48]]]],[26],[26],[[1,2,2],19],[[13,[19,[50]]],12],[[1,51]],[[6,51]],[[20,51]],[[21,51]],[[22,51]],[[23,51]],[[24,51]],[1,2],[[8,8]],[[],[[19,[[53,[52]]]]]],[[8,8],8],[[8,8],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[19,[34]]]],[[],[[19,[34]]]],[8],[[],12],[8,12],[1,12],[1,12],[8,12],[1,12],[1,12],[1,12],[1,12],[1,12],[1,12],[1,12],[1,12],[8,[[54,[8]]]],[8,[[55,[8]]]],[[],[[56,[36]]]],[[1,2,2],[[44,[6]]]],[[1,2],19],[1,2],[[10,22],1],[21,6],[[10,22,8],1],[[10,22],1],[8,8],[13],[36],[[],[[18,[57]]]],[[]],[[]],[18],[[[59,[58]]]],[[1,2,13],[[19,[6]]]],[[1,13],60],[[1,2,13]],[[1,14],[[19,[25]]]],[[6,6],[[19,[25]]]],[[20,20],[[19,[25]]]],[[21,21],[[19,[25]]]],[[22,22],[[19,[25]]]],[[23,23],[[19,[25]]]],[[24,24],[[19,[25]]]],[6,[[40,[13,39]]]],[[1,2],12],[6,2],[13,61],[13,[[19,[50]]]],[13,34],[1,[[19,[49]]]],[1,[[19,[49]]]],[1,2],[1,2],[1,[[19,[49]]]],[30,[[19,[31]]]],[[],2],[[1,2,2],[[44,[6]]]],[[8,8]],[[1,2]],[1,12],[[1,2],12],[[]],[[1,2,2,2,13],60],[[8,8,12]],[[6,7]],[[6,2]],[[1,12]],[13],[[1,12]],[[6,13]],[[1,12]],[[1,12]],[[1,12]],[[1,2]],[[1,12]],[[1,2,13,13],12],[[1,2]],[[6,13]],[[1,2,2,2,2]],[[6,2]],[[]],[[]],[[13,[62,[34]]]],[[13,34]],[[1,[19,[13]]]],[[1,[19,[13]]]],[[1,2]],[[1,2]],[[1,[19,[13]]]],[30],[[1,2,2,13,2,13,13,24],12],[[1,2,2],60],[[1,2,13,13],12],[[1,2,2,13,13],12],[[1,2,2,6],12],[[1,13]],[[6,2]],[[1,2,13],12],[[1,2,60]],[[1,2]],[[1,2]],[[1,2]],[[1,2]],[[1,[19,[13]]]],[[1,2]],[[1,12]],[[6,20]],[[1,12]],[[1,2]],[[6,13]],[[],50],[[],50],[13,19],[30,19],[[29,[19,[30]]]],[13],[6,2],[[1,2],[[19,[48]]]],[1,2],[1,2],[1,2],[1,2],[1,[[19,[49]]]],[1,2],[[8,8],8],[[8,8]],[1,12],[[8,8],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],63],[[],63],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[8,8]],[6,20],[20,[[19,[48]]]],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[[19,[34]]],[[40,[64]]]],[[[19,[34]]],[[40,[64]]]],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],50],[6,21],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[21,[[19,[48]]]],[16],[[8,8],8],[1,2],[6,[[40,[13,39]]]],[[[67,[66]]]]],"c":[116,118,120],"p":[[3,"Agent"],[15,"u32"],[8,"FnOnce"],[8,"Send"],[3,"WeakRefNotify"],[3,"Candidate"],[4,"SocketAddr"],[3,"AgentOption"],[3,"NiceCandidate"],[3,"MainContext"],[8,"FnMut"],[15,"bool"],[15,"str"],[8,"ObjectType"],[3,"BindingBuilder"],[3,"SignalHandlerId"],[8,"IsClass"],[3,"Class"],[4,"Option"],[4,"CandidateTransport"],[4,"CandidateType"],[4,"Compatibility"],[4,"ComponentState"],[4,"RelayType"],[4,"Ordering"],[8,"Fn"],[8,"Sync"],[3,"RustClosure"],[3,"SignalId"],[3,"Quark"],[3,"NonNull"],[3,"WeakRef"],[8,"TryFromClosureReturnValue"],[3,"Value"],[8,"IntoIterator"],[3,"ParamSpec"],[3,"Formatter"],[6,"Result"],[3,"Utf8Error"],[4,"Result"],[3,"PropertyNotificationFreezeGuard"],[3,"GPtrArray"],[3,"Global"],[3,"Vec"],[3,"GSList"],[3,"GList"],[15,"usize"],[3,"String"],[3,"GString"],[3,"Type"],[8,"Hasher"],[8,"IsInterface"],[3,"InterfaceRef"],[3,"Iter"],[3,"IterNames"],[3,"PtrSlice"],[3,"Object"],[8,"ObjectSubclass"],[3,"InitializingObject"],[15,"i32"],[8,"FromValue"],[8,"Into"],[3,"SendValue"],[3,"BoolError"],[3,"TypeId"],[3,"Closure"],[8,"AsRef"]],"a":{"bytestream-tcp":[99,314],"candidate-gathering-done":[100],"component-state-changed":[103],"controlling-mode":[104,315,376],"force-relay":[105,317,378],"full-mode":[318],"get_component_state":[97],"get_default_local_candidate":[146],"get_local_candidates":[328],"get_local_credentials":[329],"get_remote_candidates":[366],"get_stream_name":[427],"ice-tcp":[106,319,380],"ice-trickle":[107,320,381],"ice-udp":[108,321,382],"idle-timeout":[110,296,383],"initial-binding-request-received":[111],"keepalive-conncheck":[112,322,384],"max-connectivity-checks":[115,330,386],"new-candidate":[116],"new-candidate-full":[117],"new-remote-candidate":[118],"new-remote-candidate-full":[119],"new-selected-pair":[120],"new-selected-pair-full":[121],"nice_agent_add_stream":[38],"nice_agent_attach_recv":[44],"nice_agent_forget_relays":[190],"nice_agent_gather_candidates":[281],"nice_agent_generate_local_candidate_sdp":[282],"nice_agent_generate_local_sdp":[283],"nice_agent_generate_local_stream_sdp":[284],"nice_agent_get_component_state":[97],"nice_agent_get_default_local_candidate":[146],"nice_agent_get_local_candidates":[328],"nice_agent_get_local_credentials":[329],"nice_agent_get_remote_candidates":[366],"nice_agent_get_selected_pair":[287],"nice_agent_get_stream_name":[427],"nice_agent_new":[331],"nice_agent_new_full":[333],"nice_agent_new_reliable":[334],"nice_agent_option_consent_freshness":[2],"nice_agent_option_ice_trickle":[15],"nice_agent_option_lite_mode":[16],"nice_agent_option_regular_nomination":[22],"nice_agent_option_reliable":[23],"nice_agent_option_support_renomination":[28],"nice_agent_parse_remote_candidate_sdp":[343],"nice_agent_parse_remote_sdp":[344],"nice_agent_parse_remote_stream_sdp":[345],"nice_agent_peer_candidate_gathering_done":[354],"nice_agent_remove_stream":[368],"nice_agent_restart":[369],"nice_agent_restart_stream":[370],"nice_agent_send":[372],"nice_agent_set_local_credentials":[385],"nice_agent_set_port_range":[388],"nice_agent_set_relay_info":[400],"nice_agent_set_remote_candidates":[401],"nice_agent_set_remote_credentials":[402],"nice_agent_set_selected_pair":[403],"nice_agent_set_selected_remote_candidate":[404],"nice_agent_set_software":[405],"nice_agent_set_stream_name":[407],"nice_agent_set_stream_tos":[408],"nice_candidate_equal_target":[168],"nice_candidate_new":[332],"nice_candidate_transport_tcp_active":[31],"nice_candidate_transport_tcp_passive":[32],"nice_candidate_transport_tcp_so":[33],"nice_candidate_transport_to_string":[456],"nice_candidate_transport_udp":[35],"nice_candidate_type_host":[14],"nice_candidate_type_peer_reflexive":[21],"nice_candidate_type_relayed":[26],"nice_candidate_type_server_reflexive":[29],"nice_candidate_type_to_string":[485],"nice_compatibility_google":[13],"nice_compatibility_msn":[18],"nice_compatibility_oc2007":[19],"nice_compatibility_oc2007r2":[20],"nice_compatibility_rfc5245":[27],"nice_compatibility_wlm2009":[37],"nice_component_state_connected":[8],"nice_component_state_connecting":[9],"nice_component_state_disconnected":[10],"nice_component_state_failed":[11],"nice_component_state_gathering":[12],"nice_component_state_last":[17],"nice_component_state_ready":[24],"nice_relay_type_turn_tcp":[30],"nice_relay_type_turn_tls":[34],"nice_relay_type_turn_udp":[36],"niceagent":[0],"niceagentoption":[1],"nicecandidatetransport":[4],"nicecandidatetype":[5],"nicecompatibility":[6],"nicecomponentstate":[7],"nicerelaytype":[25],"proxy-ip":[125,359,394],"proxy-password":[126,360,395],"proxy-port":[127,361,396],"proxy-type":[128,362,397],"proxy-username":[129,363,398],"reliable-transport-writable":[130],"stun-initial-timeout":[131,409,428],"stun-max-retransmissions":[132,410,429],"stun-pacing-timer":[133,411,430],"stun-reliable-timeout":[134,412,431],"stun-server":[135,413,432],"stun-server-port":[136,414,433],"support-renomination":[137,415,436],"upnp":[140],"upnp-timeout":[141,418,488]}},\
"nice_sys":{"doc":"","t":"RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRDTDDGGDGGGGGDGDGGRRRRRRRRRRRRRRRRRDMGMMGDGGMGRRRMDMMMLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLMLLLLLLLLLMLLLLLLLLLLMLLLLLLLLLLMMMMMFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFMMMFFFFFFFFFFFFFFFFFFFFMMLLLLLLLMLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMM","n":["NICE_AGENT_MAX_REMOTE_CANDIDATES","NICE_AGENT_OPTION_CONSENT_FRESHNESS","NICE_AGENT_OPTION_ICE_TRICKLE","NICE_AGENT_OPTION_LITE_MODE","NICE_AGENT_OPTION_REGULAR_NOMINATION","NICE_AGENT_OPTION_RELIABLE","NICE_AGENT_OPTION_SUPPORT_RENOMINATION","NICE_CANDIDATE_MAX_FOUNDATION","NICE_CANDIDATE_MAX_LOCAL_ADDRESSES","NICE_CANDIDATE_MAX_TURN_SERVERS","NICE_CANDIDATE_TRANSPORT_TCP_ACTIVE","NICE_CANDIDATE_TRANSPORT_TCP_PASSIVE","NICE_CANDIDATE_TRANSPORT_TCP_SO","NICE_CANDIDATE_TRANSPORT_UDP","NICE_CANDIDATE_TYPE_HOST","NICE_CANDIDATE_TYPE_PEER_REFLEXIVE","NICE_CANDIDATE_TYPE_RELAYED","NICE_CANDIDATE_TYPE_SERVER_REFLEXIVE","NICE_COMPATIBILITY_DRAFT19","NICE_COMPATIBILITY_GOOGLE","NICE_COMPATIBILITY_LAST","NICE_COMPATIBILITY_MSN","NICE_COMPATIBILITY_OC2007","NICE_COMPATIBILITY_OC2007R2","NICE_COMPATIBILITY_RFC5245","NICE_COMPATIBILITY_WLM2009","NICE_COMPONENT_STATE_CONNECTED","NICE_COMPONENT_STATE_CONNECTING","NICE_COMPONENT_STATE_DISCONNECTED","NICE_COMPONENT_STATE_FAILED","NICE_COMPONENT_STATE_GATHERING","NICE_COMPONENT_STATE_LAST","NICE_COMPONENT_STATE_READY","NICE_COMPONENT_TYPE_RTCP","NICE_COMPONENT_TYPE_RTP","NICE_NOMINATION_MODE_AGGRESSIVE","NICE_NOMINATION_MODE_REGULAR","NICE_PROXY_TYPE_HTTP","NICE_PROXY_TYPE_LAST","NICE_PROXY_TYPE_NONE","NICE_PROXY_TYPE_SOCKS5","NICE_RELAY_TYPE_TURN_TCP","NICE_RELAY_TYPE_TURN_TLS","NICE_RELAY_TYPE_TURN_UDP","NiceAddress","NiceAddress_s","NiceAgent","NiceAgentClass","NiceAgentOption","NiceAgentRecvFunc","NiceCandidate","NiceCandidateTransport","NiceCandidateType","NiceCompatibility","NiceComponentState","NiceComponentType","NiceInputMessage","NiceNominationMode","NiceOutputMessage","NiceProxyType","NiceRelayType","PSEUDO_TCP_CLOSED","PSEUDO_TCP_CLOSE_WAIT","PSEUDO_TCP_CLOSING","PSEUDO_TCP_DEBUG_NONE","PSEUDO_TCP_DEBUG_NORMAL","PSEUDO_TCP_DEBUG_VERBOSE","PSEUDO_TCP_ESTABLISHED","PSEUDO_TCP_FIN_WAIT_1","PSEUDO_TCP_FIN_WAIT_2","PSEUDO_TCP_LAST_ACK","PSEUDO_TCP_LISTEN","PSEUDO_TCP_SHUTDOWN_RD","PSEUDO_TCP_SHUTDOWN_RDWR","PSEUDO_TCP_SHUTDOWN_WR","PSEUDO_TCP_SYN_RECEIVED","PSEUDO_TCP_SYN_SENT","PSEUDO_TCP_TIME_WAIT","PseudoTcpCallbacks","PseudoTcpClosed","PseudoTcpDebugLevel","PseudoTcpOpened","PseudoTcpReadable","PseudoTcpShutdown","PseudoTcpSocket","PseudoTcpSocketClass","PseudoTcpState","PseudoTcpWritable","PseudoTcpWriteResult","WR_FAIL","WR_SUCCESS","WR_TOO_LARGE","WritePacket","_PseudoTcpSocketClass","addr","addr","base_addr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffers","buffers","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","component_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","foundation","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","ip4","ip6","length","n_buffers","n_buffers","nice_address_copy_to_sockaddr","nice_address_dup","nice_address_equal","nice_address_equal_no_port","nice_address_free","nice_address_get_port","nice_address_init","nice_address_ip_version","nice_address_is_private","nice_address_is_valid","nice_address_new","nice_address_set_from_sockaddr","nice_address_set_from_string","nice_address_set_ipv4","nice_address_set_ipv6","nice_address_set_port","nice_address_to_string","nice_agent_add_local_address","nice_agent_add_stream","nice_agent_attach_recv","nice_agent_close_async","nice_agent_forget_relays","nice_agent_gather_candidates","nice_agent_generate_local_candidate_sdp","nice_agent_generate_local_sdp","nice_agent_generate_local_stream_sdp","nice_agent_get_component_state","nice_agent_get_default_local_candidate","nice_agent_get_io_stream","nice_agent_get_local_candidates","nice_agent_get_local_credentials","nice_agent_get_remote_candidates","nice_agent_get_selected_pair","nice_agent_get_selected_socket","nice_agent_get_sockets","nice_agent_get_stream_name","nice_agent_get_type","nice_agent_new","nice_agent_new_full","nice_agent_new_reliable","nice_agent_parse_remote_candidate_sdp","nice_agent_parse_remote_sdp","nice_agent_parse_remote_stream_sdp","nice_agent_peer_candidate_gathering_done","nice_agent_recv","nice_agent_recv_messages","nice_agent_recv_messages_nonblocking","nice_agent_recv_nonblocking","nice_agent_remove_stream","nice_agent_restart","nice_agent_restart_stream","nice_agent_send","nice_agent_send_messages_nonblocking","nice_agent_set_local_credentials","nice_agent_set_port_range","nice_agent_set_relay_info","nice_agent_set_remote_candidates","nice_agent_set_remote_credentials","nice_agent_set_selected_pair","nice_agent_set_selected_remote_candidate","nice_agent_set_software","nice_agent_set_stream_name","nice_agent_set_stream_tos","nice_candidate_copy","nice_candidate_equal_target","nice_candidate_free","nice_candidate_get_type","nice_candidate_new","nice_candidate_transport_to_string","nice_candidate_type_to_string","nice_component_state_to_string","nice_debug_disable","nice_debug_enable","nice_interfaces_get_ip_for_interface","nice_interfaces_get_local_interfaces","nice_interfaces_get_local_ips","parent_class","password","priority","pseudo_tcp_set_debug_level","pseudo_tcp_socket_can_send","pseudo_tcp_socket_close","pseudo_tcp_socket_connect","pseudo_tcp_socket_get_available_bytes","pseudo_tcp_socket_get_available_send_space","pseudo_tcp_socket_get_error","pseudo_tcp_socket_get_next_clock","pseudo_tcp_socket_get_type","pseudo_tcp_socket_is_closed","pseudo_tcp_socket_is_closed_remotely","pseudo_tcp_socket_new","pseudo_tcp_socket_notify_clock","pseudo_tcp_socket_notify_message","pseudo_tcp_socket_notify_mtu","pseudo_tcp_socket_notify_packet","pseudo_tcp_socket_recv","pseudo_tcp_socket_send","pseudo_tcp_socket_set_time","pseudo_tcp_socket_shutdown","s","stream_id","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transport","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user_data","username"],"q":[[0,"nice_sys"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,7,7,0,0,0,0,7,0,0,0,0,7,0,1,4,4,14,8,11,1,2,3,4,5,6,7,14,8,11,1,2,3,4,5,6,7,5,6,1,2,3,4,5,6,7,1,2,3,4,5,6,7,4,8,11,1,2,3,4,5,6,7,4,14,8,11,1,2,3,4,5,6,7,5,14,8,11,1,2,3,4,5,6,7,1,1,5,5,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,4,1,2,3,4,5,6,7,4,14,8,11,1,2,3,4,5,6,7,14,8,11,1,2,3,4,5,6,7,4,14,8,11,1,2,3,4,5,6,7,7,4],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[7,7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[8,9],10],[[11,9],10],[[1,9],10],[[2,9],10],[[3,9],10],[[4,9],10],[[5,9],10],[[6,9],10],[[7,9],10],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],0,0],"c":[],"p":[[19,"NiceAddress_s"],[3,"NiceAddress"],[3,"NiceAgentClass"],[3,"NiceCandidate"],[3,"NiceInputMessage"],[3,"NiceOutputMessage"],[3,"PseudoTcpCallbacks"],[3,"NiceAgent"],[3,"Formatter"],[6,"Result"],[3,"PseudoTcpSocket"],[4,"Result"],[3,"TypeId"],[3,"_PseudoTcpSocketClass"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};

searchState.loadedDescShard("jitsi_xmpp_parsers", 0, "The action attribute.\nDescribes a session’s content, there can be multiple …\nAccept a content-add action received from another party.\nAdd one or more new content definitions to the session.\nChange the directionality of media sending.\nReject a content-add action received from another party.\nRemove one or more content definitions from the session.\nEnum wrapping all of the various supported descriptions of …\nExchange information about parameters for an application …\nJingle In-Band Bytestreams (XEP-0261) transport.\nJingle ICE-UDP Bytestreams (XEP-0176) transport.\nThe main Jingle container, to be included in an iq stanza.\nJingle RTP Sessions (XEP-0167) description.\nExchange information about security preconditions.\nDefinitively accept a session negotiation.\nSend session-level information, such as a ping or a …\nRequest negotiation of a new Jingle session.\nEnd an existing session.\nJingle SOCKS5 Bytestreams (XEP-0260) transport.\n— Non-standard values used by Jitsi Meet: — Add a …\nRemove a source from existing content.\nEnum wrapping all of the various supported transports of a …\nAccept a transport-replace action received from another …\nExchange transport candidates.\nReject a transport-replace action received from another …\nRedefine a transport method or replace it with a different …\nTo be used for any description that isn’t known at …\nTo be used for any transport that isn’t known at …\nThe action to execute on both ends.\nAdd a content to this Jingle container.\nA list of contents to be negotiated in this session.\nWho created this content.\nWhat to send.\nHow the content definition is to be interpreted by the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAn optional grouping.\nWho the initiator is.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA per-session unique identifier for this content.\nCreate a new Jingle element.\nCreate a new content.\nPayloads to be included.\nAn optional reason.\nWho the responder is.\nWith which security.\nWho can send data for this content.\nSet the grouping in this Jingle container.\nSet the reason in this Jingle container.\nUnique session identifier between two entities.\nHow to send it.\nSet the description of this content.\nSet how the content is to be interpreted by the recipient.\nSet the initiator’s JID.\nSet the responder’s JID.\nSet the security of this content.\nSpecify who can send data for this content.\nSet the transport of this content.\nFingerprint of the key used for a DTLS handshake.\nReturns the argument unchanged.\nCreate a new Fingerprint from a Setup and parsing the hash.\nCreate a new Fingerprint from a Setup and a Hash.\nThe hash algorithm used for this fingerprint.\nCalls <code>U::from(self)</code>.\nIndicates which of the end points should initiate the TCP …\nHash value of this fingerprint.\nWrapper element for an ICE-UDP transport.\nColibri WebSocket details\nAdd a candidate to this transport.\nList of candidates for this ICE-UDP session.\nFingerprint of the key used for the DTLS handshake.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new ICE-UDP transport.\nA Password as defined in ICE-CORE.\nA User Fragment as defined in ICE-CORE.\nThe WebSocket URL\nDetails of the Colibri WebSocket\nSet the DTLS-SRTP fingerprint of this transport.\nWrapper element describing an RTP session.\nReturns the argument unchanged.\nList of header extensions.\nCalls <code>U::from(self)</code>.\nNamespace of the encryption scheme used.\nCreate a new RTP description.\nList of encodings that can be used for this RTP stream.\nSpecifies the ability to multiplex RTP Data and Control …\nUser-friendly name for the encryption scheme, should be …\nList of ssrc-group.\nList of ssrc.\nElement grouping multiple ssrc.\nParameter associated with a ssrc.\nSource element for the ssrc SDP attribute.\nssrc-info associated with a ssrc.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nMaps to the ssrc-id parameter.\n— Non-standard attributes used by Jitsi Meet: — …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new SSMA Source element.\nThe owner of the ssrc.\nList of attributes for this source.\nThe semantics of this group.\nThe various ssrc concerned by this group.\nJitsi Meet Colibri namespace\nJitsi Meet general namespace")